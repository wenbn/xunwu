package www.ucforward.com.serviceImpl;

import org.apache.log4j.Logger;
import org.springframework.stereotype.Service;
import www.ucforward.com.constants.ResultConstant;
import www.ucforward.com.dao.*;
import www.ucforward.com.entity.*;
import www.ucforward.com.serviceInter.HousesService;
import www.ucforward.com.vo.ResultVo;

import javax.annotation.Resource;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

@Service("housesService")
public class HousesServiceImpl implements HousesService {
    protected final static Logger logger = Logger.getLogger(HousesServiceImpl.class);

    @Resource
    private HsOwnerHousingApplicationDao ownerHousingApplyDao;
    @Resource
    private HsOwnerHousingApplicationLogDao ownerHousingApplyLogDao;
    @Resource
    private HsHouseImgDao houseImgDao;
    @Resource
    private HsHouseLogDao houseLogDao;
    @Resource
    private HsMainHouseDao mainHouseDao;

    @Override
    public ResultVo delete(Integer id, Object o) throws Exception {
        ResultVo vo = new ResultVo();
        int result = -1;//
        try{
            if (o instanceof HsOwnerHousingApplication) {//
                result = ownerHousingApplyDao.deleteByPrimaryKey(id);
            } else if (o instanceof HsOwnerHousingApplicationLog) {
                result = ownerHousingApplyLogDao.deleteByPrimaryKey(id);
            } else if (o instanceof HsHouseImg) {
                result = houseImgDao.deleteByPrimaryKey(id);
            } else if (o instanceof HsHouseLog) {
                result = houseLogDao.deleteByPrimaryKey(id);
            } else if (o instanceof HsMainHouse) {
                result = mainHouseDao.deleteByPrimaryKey(id);
            }
            if(result>0){//操作成功
                vo.setResult(ResultConstant.SYS_REQUIRED_SUCCESS);
                vo.setMessage(ResultConstant.SYS_REQUIRED_SUCCESS_VALUE);
            }
        }catch (Exception e){
            vo.setResult(ResultConstant.SYS_REQUIRED_TIMEOUT_ERROR);
            vo.setMessage(ResultConstant.SYS_REQUIRED_TIMEOUT_ERROR_VALUE);
        }finally {
            return vo;
        }
    }

    @Override
    public ResultVo insert(Object o) throws Exception {
        ResultVo vo = new ResultVo();
        int result = -1;//
        try{
            if (o instanceof HsOwnerHousingApplication) {//
                result = ownerHousingApplyDao.insert((HsOwnerHousingApplication)o);
            } else if (o instanceof HsOwnerHousingApplicationLog) {
                result = ownerHousingApplyLogDao.insert((HsOwnerHousingApplicationLog)o);
            } else if (o instanceof HsHouseImg) {
                result = houseImgDao.insert((HsHouseImg)o);
            } else if (o instanceof HsHouseLog) {
                result = houseLogDao.insert((HsHouseLog)o);
            } else if (o instanceof HsMainHouse) {
                result = mainHouseDao.insert((HsMainHouse)o);
            }
            if(result>0){//操作成功
                vo.setResult(ResultConstant.SYS_REQUIRED_SUCCESS);
                vo.setMessage(ResultConstant.SYS_REQUIRED_SUCCESS_VALUE);
            }
        }catch (Exception e){
            vo.setResult(ResultConstant.SYS_REQUIRED_TIMEOUT_ERROR);
            vo.setMessage(ResultConstant.SYS_REQUIRED_TIMEOUT_ERROR_VALUE);
        }finally {
            return vo;
        }
    }

    @Override
    public ResultVo select(Integer id, Object o) throws Exception {
        ResultVo vo = new ResultVo();
        Object obj = null;
        try{
            if (o instanceof HsOwnerHousingApplication) {//
                obj = ownerHousingApplyDao.selectByPrimaryKey(id);
            } else if (o instanceof HsOwnerHousingApplicationLog) {
                obj = ownerHousingApplyLogDao.selectByPrimaryKey(id);
            } else if (o instanceof HsHouseImg) {
                obj = houseImgDao.selectByPrimaryKey(id);
            } else if (o instanceof HsHouseLog) {
                obj = houseLogDao.selectByPrimaryKey(id);
            } else if (o instanceof HsMainHouse) {
                obj = mainHouseDao.selectByPrimaryKey(id);
            }
            vo.setDataSet(obj);
            vo.setResult(ResultConstant.SYS_REQUIRED_SUCCESS);
            vo.setMessage(ResultConstant.SYS_REQUIRED_SUCCESS_VALUE);
        }catch (Exception e){
            vo.setResult(ResultConstant.SYS_REQUIRED_TIMEOUT_ERROR);
            vo.setMessage(ResultConstant.SYS_REQUIRED_TIMEOUT_ERROR_VALUE);
        }finally {
            return vo;
        }
    }

    /**
     * 查询列表数据
     * @param o 查询的实体，用于控制查询的dao
     * @param condition 查询参数
     * @param returnType 返回值类型，0 List<Map>  1 list<Entity>
     * @return Map<Object,Object> result  key data,pageInfo
     * @throws Exception
     */
    @Override
    public ResultVo selectList(Object o, Map<Object, Object> condition, int returnType) throws Exception {
        ResultVo vo = new ResultVo();
        List<Object> data = null;
        Map<Object,Object> result = new HashMap<Object,Object>();
        try{
            if (o instanceof HsOwnerHousingApplication) {//
                result = ownerHousingApplyDao.selectListByCondition(condition,returnType);
            } else if (o instanceof HsOwnerHousingApplicationLog) {
                //data = ownerHousingApplyLogDao.selectByPrimaryKey(id);
            } else if (o instanceof HsHouseImg) {
                //data = houseImgDao.selectByPrimaryKey(id);
            } else if (o instanceof HsHouseLog) {
               // data = houseLogDao.selectByPrimaryKey(id);
            } else if (o instanceof HsMainHouse) {
                //data = mainHouseDao.selectByPrimaryKey(id);
            }
            //下面的方法有样例，select**ListByCondition

//            } else if (o instanceof HsSysDictcodeGroup) {
//                data = hsSysDictcodeGroupDao.selectListByCondition(condition,returnType);
//            } else if (o instanceof HsSysDictcodeItem) {
//                data =  hsSysDictcodeItemDao.selectListByCondition(condition,returnType);
//            }

            vo.setResult(ResultConstant.SYS_REQUIRED_SUCCESS);
            vo.setMessage(ResultConstant.SYS_REQUIRED_SUCCESS_VALUE);
            vo.setDataSet(result.get("data"));
            vo.setPageInfo(result.get("pageInfo"));
        }catch (Exception e){
            vo.setResult(ResultConstant.SYS_REQUIRED_TIMEOUT_ERROR);
            vo.setMessage(ResultConstant.SYS_REQUIRED_TIMEOUT_ERROR_VALUE);
        }finally {
            return vo;
        }
    }

    @Override
    public ResultVo update(Object o) throws Exception {
        ResultVo vo = new ResultVo();
        int result = -1;//
        try{

            if (o instanceof HsOwnerHousingApplication) {//
                result = ownerHousingApplyDao.updateByPrimaryKeySelective((HsOwnerHousingApplication)o);
            } else if (o instanceof HsOwnerHousingApplicationLog) {
                result = ownerHousingApplyLogDao.updateByPrimaryKeySelective((HsOwnerHousingApplicationLog)o);
            } else if (o instanceof HsHouseImg) {
                result = houseImgDao.updateByPrimaryKeySelective((HsHouseImg)o);
            } else if (o instanceof HsHouseLog) {
                result = houseLogDao.updateByPrimaryKeySelective((HsHouseLog)o);
            } else if (o instanceof HsMainHouse) {
                result = mainHouseDao.updateByPrimaryKeySelective((HsMainHouse)o);
            }
            if(result>0){//操作成功
                vo.setResult(ResultConstant.SYS_REQUIRED_SUCCESS);
                vo.setMessage(ResultConstant.SYS_REQUIRED_SUCCESS_VALUE);
            }
        }catch (Exception e){
            vo.setResult(ResultConstant.SYS_REQUIRED_TIMEOUT_ERROR);
            vo.setMessage(ResultConstant.SYS_REQUIRED_TIMEOUT_ERROR_VALUE);
        }finally {
            return vo;
        }
    }


//    @Override
//    public int delete(Integer id, Object o) {
//        int result = -2;//错误则返回-2
//       if(o instanceof HsOwnerHousingApplication){
//           result = ownerHousingApplyDao.deleteByPrimaryKey(id);
//       }else if(o instanceof HsOwnerHousingApplicationLog){
//           result = ownerHousingApplyLogDao.deleteByPrimaryKey(id);
//       }else if(o instanceof HsHouseImg){
//           result = houseImgDao.deleteByPrimaryKey(id);
//       }else if(o instanceof  HsHouseLog){
//           result = houseLogDao.deleteByPrimaryKey(id);
//       }else if(o instanceof HsMainHouse){
//           result = mainHouseDao.deleteByPrimaryKey(id);
//       }
//        return result;
//    }
//
//    @Override
//    public int insert(Object o) {
//        int result = -2;
//        if(o instanceof  HsOwnerHousingApplication){
//            result = ownerHousingApplyDao.insert((HsOwnerHousingApplication)o);
//        }else if(o instanceof  HsOwnerHousingApplicationLog){
//            result = ownerHousingApplyLogDao.insert((HsOwnerHousingApplicationLog)o);
//        }else if(o instanceof HsHouseImg){
//            result = houseImgDao.insert((HsHouseImg) o);
//        }else if(o instanceof  HsHouseLog){
//            result = houseLogDao.insert((HsHouseLog) o);
//        }else  if(o instanceof  HsMainHouse){
//            result = mainHouseDao.insert((HsMainHouse) o);
//        }
//        return result;
//    }
//
//    @Override
//    public int insertByChoose(Object o) {
//        int result = -2;
//        if(o instanceof  HsOwnerHousingApplication){
//            result = ownerHousingApplyDao.insertSelective((HsOwnerHousingApplication) o);
//            //插入数据成功，返回该条数据的主键ID
//            if(result > 0){
//              result =  ((HsOwnerHousingApplication) o).getId();
//            }
//        }else if(o instanceof  HsOwnerHousingApplicationLog){
//            result = ownerHousingApplyLogDao.insertSelective((HsOwnerHousingApplicationLog)o);
//        }else if(o instanceof  HsHouseImg){
//            result = houseImgDao.insertSelective((HsHouseImg) o);
//        }else if(o instanceof  HsHouseLog){
//            result = houseLogDao.insertSelective((HsHouseLog)o);
//        }else if(o instanceof  HsMainHouse){
//            result = mainHouseDao.insertSelective((HsMainHouse) o);
//        }
//        return result;
//    }
//
//    @Override
//    public Object selectListData(Integer id, Object o) {
//        if(o instanceof  HsOwnerHousingApplication){
//            return  ownerHousingApplyDao.selectByPrimaryKey(id);
//        }else if(o instanceof  HsOwnerHousingApplicationLog){
//            return ownerHousingApplyLogDao.selectByPrimaryKey(id);
//        }else if(o instanceof  HsHouseImg){
//            return houseImgDao.selectByPrimaryKey(id);
//        }else if(o instanceof  HsHouseLog){
//            return houseLogDao.selectByPrimaryKey(id);
//        }else if(o instanceof  HsMainHouse){
//            return mainHouseDao.selectByPrimaryKey(id);
//        }
//        return null;
//    }
//
//    @Override
//    public int updateByCondition(Object o) {
//        int result = -2;
//        if(o instanceof  HsOwnerHousingApplication){
//            result = ownerHousingApplyDao.updateByPrimaryKeySelective((HsOwnerHousingApplication)o);
//        }else if(o instanceof  HsOwnerHousingApplicationLog){
//            result = ownerHousingApplyLogDao.updateByPrimaryKeySelective((HsOwnerHousingApplicationLog)o);
//        }else if(o instanceof  HsHouseImg){
//            result = houseImgDao.updateByPrimaryKeySelective((HsHouseImg) o);
//        }else if(o instanceof  HsHouseLog){
//            result = houseLogDao.updateByPrimaryKeySelective((HsHouseLog) o);
//        }else if(o instanceof  HsMainHouse){
//            result = mainHouseDao.updateByPrimaryKeySelective((HsMainHouse) o);
//        }
//        return result;
//    }
//
//    @Override
//    public int update(Object o) {
//        int result = -2;
//        if(o instanceof  HsOwnerHousingApplication){
//            result = ownerHousingApplyDao.updateByPrimaryKey((HsOwnerHousingApplication)o);
//        }else  if(o instanceof  HsOwnerHousingApplicationLog){
//            result = ownerHousingApplyLogDao.updateByPrimaryKey((HsOwnerHousingApplicationLog)o);
//        }else  if(o instanceof  HsHouseImg){
//            result = houseImgDao.updateByPrimaryKey((HsHouseImg) o);
//        }else if(o instanceof  HsHouseLog){
//            result = houseLogDao.updateByPrimaryKey((HsHouseLog) o);
//        }else if(o instanceof  HsMainHouse){
//            result = mainHouseDao.updateByPrimaryKey((HsMainHouse) o);
//        }
//        return result;
//    }
}
