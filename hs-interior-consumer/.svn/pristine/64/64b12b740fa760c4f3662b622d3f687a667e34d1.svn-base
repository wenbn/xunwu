package www.ucforward.com.manager.impl;

import com.google.common.collect.Maps;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Service;
import org.utils.StringUtil;
import www.ucforward.com.constants.RedisConstant;
import www.ucforward.com.constants.ResultConstant;
import www.ucforward.com.entity.HsRegionCode;
import www.ucforward.com.entity.HsSupportCity;
import www.ucforward.com.manager.CommonAdminManager;
import www.ucforward.com.serviceInter.CommonService;
import www.ucforward.com.utils.JsonUtil;
import www.ucforward.com.utils.RedisUtil;
import www.ucforward.com.vo.ResultVo;

import javax.annotation.Resource;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

/**
 * @author wenbn
 * @version 1.0
 * @date 2018/8/27
 */
@Service("commonAdminManager")
public class CommonAdminManagerImpl implements CommonAdminManager {

    // 日志记录器
    private static Logger logger = LoggerFactory.getLogger(CommonAdminManagerImpl.class);

    @Resource
    private CommonService commonService;
    /**
     * 获取支持的城市信息
     * @return
     */
    @Override
    public ResultVo getSupportCities(Map<Object, Object> condition) {

        ResultVo vo = null;
        try {
            //自定义查询的列名
            List<String> queryColumn = new ArrayList<>();
            queryColumn.add("ID id");//城市id
            queryColumn.add("PID pid");//父级城市id
            queryColumn.add("CITY_NAME_EN cityNameEn");//行政单位英文名
            queryColumn.add("CITY_NAME_CN cityNameCn");//行政单位中文名
            queryColumn.add("CITY_LONGITUDE longitude");//google地图经度
            queryColumn.add("CITY_LATITUDE latitude");//google地图纬度
            queryColumn.add("LEVEL level");//行政级别 1:市 2:社区 3:子社区
            condition.put("queryColumn", queryColumn);
            condition.putAll(condition);
            //查询支持的所有城市信息
            List<Map<String, Object>> perms =commonService.findAllCity(condition);
            vo = ResultVo.success();
            vo.setDataSet(perms);
            queryColumn = null;

        } catch (Exception e) {
            logger.warn("interior Remote call to getSupportCities fails"+e.getMessage());
            vo.setResult(ResultConstant.SYS_REQUIRED_TIMEOUT_ERROR);
            vo.setMessage(ResultConstant.SYS_REQUIRED_TIMEOUT_ERROR_VALUE);
        } finally {
            condition = null;
            return vo;
        }
    }

    /**
     * 获取地址编码
     * @return
     * @throws Exception
     */
    @Override
    public ResultVo loadCityCode(Map<Object,Object> condition) {
        ResultVo result = new ResultVo();
        try {
            if(RedisUtil.existKey(RedisConstant.SYS_REGIONNAME_CACHE_KEY)) {//判断缓存中是否有值
                List<Map<Object,Object>> regionList =  JsonUtil.parseJSON2List(RedisUtil.safeGet(RedisConstant.SYS_REGIONNAME_CACHE_KEY));
                result.setDataSet(regionList);
                return result;
            }
            List<String> queryColumn = new ArrayList<>();
            queryColumn.add("ID id");//主键ID
            queryColumn.add("REGION_NAME_CN regionNameCn");//房源名称
            queryColumn.add("REGION_NAME_EN region_name_en");//房源主图
            queryColumn.add("REGION_CODE regionCode"); //房屋面积
            condition.put("queryColumn",queryColumn);
            result = commonService.selectCustomColumnNamesList(HsRegionCode.class,condition);
            if(result.getResult() == ResultConstant.SYS_REQUIRED_SUCCESS){
                List<Map<Object,Object>> regionList = (List<Map<Object, Object>>)result.getDataSet();
                if( regionList!=null && regionList.size()>0 ){
                    RedisUtil.safeSet(RedisConstant.SYS_REGIONNAME_CACHE_KEY,JsonUtil.toJson(regionList),60*60*24*30);
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
            result.setResult(ResultConstant.SYS_REQUIRED_TIMEOUT_ERROR);
        }
        return result;
    }


}
