<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd	
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

	<context:property-placeholder  location="classpath:shiro.properties"/>
	<context:property-placeholder  location="classpath*:redis.properties" ignore-unresolvable="true"/>

	<!-- 与上面的配置等价，下面的更容易理解 -->
	<!--<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">-->
		<!--<property name="locations">-->
			<!--<array>-->
				<!--<value>classpath:shiro.properties</value>-->
				<!--<value>classpath*:/redis/redis.properties</value>-->
			<!--</array>-->
		<!--</property>-->
	<!--</bean>-->

	<aop:aspectj-autoproxy proxy-target-class="true"></aop:aspectj-autoproxy>
	<aop:config proxy-target-class="true"></aop:config>
	<!-- 处理请求返回json字符串的中文乱码问题 -->
	<mvc:annotation-driven>
		<mvc:message-converters>
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>application/json;charset=UTF-8</value>
					</list>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>

	<!--配置拦截器, 多个拦截器,顺序执行 -->

	<!--<mvc:default-servlet-handler/>-->
	<context:component-scan base-package="www.ucforward.com.*" />

	<!-- 对静态资源文件的访问  restful-->
	<!-- 配置SpringMVC的视图解析器 -->
	<!-- 配置前端解析器 -->
	<!--<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">-->
		<!--<property name="prefix" value="/WEB-INF/jsp/" />-->
		<!--<property name="suffix" value=".jsp" />-->
	<!--</bean>-->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"></bean>

</beans>
