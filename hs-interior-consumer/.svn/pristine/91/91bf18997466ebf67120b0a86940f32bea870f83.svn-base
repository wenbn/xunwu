<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd">

    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"></property>
    </bean>
    <!--自定义过滤器，过滤未登录请求-->
    <bean id ="shiroFormAuthenticationFilter" class="www.ucforward.com.filter.ShiroFormAuthenticationFilter"></bean>
    <!-- Shiro主过滤器-->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <!-- Shiro的核心安全接口，这个属性是必须的 -->
        <property name="securityManager" ref="securityManager"></property>
        <property name="filters">
            <map>
                <entry key="authc" value-ref="shiroFormAuthenticationFilter"></entry>
            </map>
        </property>
        <property name="filterChainDefinitions">
            <value>
                /admin/login = anon
                /admin/logout = anon
                /** = authc
            </value>
        </property>
    </bean>

    <!-- Shiro安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="hsSysRealm"></property>
        <property name="cacheManager" ref="cacheManager"></property>
        <property name="sessionManager" ref="sessionManager"></property>
    </bean>

    <!-- 缓存管理器 -->
    <bean id="cacheManager" class="org.crazycake.shiro.RedisCacheManager">
        <property name="redisManager" ref="redisManager"></property>
    </bean>

    <!-- shiro redisManager -->
    <bean id="redisManager" class="org.crazycake.shiro.RedisManager">
        <property name="host" value="${redis.host}"/>
        <property name="port" value="${redis.port}"/>
        <property name="expire" value="${redis.expire}"/>
        <property name="password" value="${redis.pwd}"/>
        <!--<property name="host" value="192.168.0.120"/>-->
        <!--<property name="port" value="6379"/>-->
        <!--<property name="expire" value="5000"/>-->
        <!--<property name="password" value="ucforward^2018"/>-->
    </bean>

    <!-- redisSessionDAO -->
    <bean id="redisSessionDAO" class="org.crazycake.shiro.RedisSessionDAO">
        <property name="redisManager" ref="redisManager" />
    </bean>

    <!-- 会话管理器 -->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <property name="sessionDAO" ref="redisSessionDAO"></property>
        <!-- session的失效时长，单位毫秒 -->
        <property name="globalSessionTimeout" value="2592000000"/><!--30天-->
        <!--<property name="globalSessionTimeout" value="1800000"/>-->
        <!-- 删除失效的session -->
        <property name="deleteInvalidSessions" value="true"/>
        <property name="sessionValidationSchedulerEnabled" value="true"/>
        <property name="sessionIdCookie" ref="sessionIdCookie"/>
    </bean>
    <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg name="name" value="ycyintang.session.id"/>
        <property name="path" value="/"/>
        <property name="httpOnly" value="true"/>
    </bean>

    <!-- 设置加密算法 -->
    <bean id="credentialsMatcher" class="org.apache.shiro.authc.credential.Md5CredentialsMatcher">
        <property name="hashAlgorithmName" value="md5"></property>
        <property name="hashIterations" value="${PASSWORD_HASHITERATIONS}"></property>
        <!-- <property name="storedCredentialsHexEncoded"></property> -->
    </bean>

    <!-- 自定义Realm 内部需要注入加密算法对象-->
    <bean id="hsSysRealm" class="www.ucforward.com.realm.HsSysRealm">
        <property name="credentialsMatcher" ref="credentialsMatcher"></property>
    </bean>

</beans>
