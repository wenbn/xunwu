package www.ucforward.com.dao.impl;

import org.springframework.stereotype.Repository;
import www.ucforward.com.dao.BaseDao;
import www.ucforward.com.dao.HsMemberHousingApplicationMessageDao;
import www.ucforward.com.entity.HsMemberHousingApplicationMessage;

import java.util.Map;

/**
 * @Auther: lsq
 * @Date: 2018/9/1 14:23
 * @Description:
 */
@Repository("hsMemberHousingApplicationMessageDao")
public class HsMemberHousingApplicationMessageDaoImpl extends BaseDao implements HsMemberHousingApplicationMessageDao {
    @Override
    public int deleteByPrimaryKey(Integer id) {
        return this.getSqlSession().delete("HsMemberHousingApplicationMessageDao.deleteByPrimaryKey",id);
    }

    @Override
    public int insert(HsMemberHousingApplicationMessage record) {
        return insertSelective(record);
    }

    @Override
    public int insertSelective(HsMemberHousingApplicationMessage record) {
        return this.getSqlSession().insert("HsMemberHousingApplicationMessageDao.insertSelective",record);
    }

    @Override
    public HsMemberHousingApplicationMessage selectByPrimaryKey(Integer id) {
        return this.getSqlSession().selectOne("HsMemberHousingApplicationMessageDao.selectByPrimaryKey",id);
    }

    @Override
    public int updateByPrimaryKeySelective(HsMemberHousingApplicationMessage record) {
        return this.getSqlSession().update("HsMemberHousingApplicationMessageDao.updateByPrimaryKeySelective",record);
    }

    @Override
    public int updateByPrimaryKey(HsMemberHousingApplicationMessage record) {
        return this.getSqlSession().update("HsMemberHousingApplicationMessageDao.updateByPrimaryKey",record);
    }

    @Override
    public Map<Object, Object> selectListByCondition(Map<Object, Object> condition, int returnType) {
        String sql = "HsMemberHousingApplicationMessageDao.selectMemberHousingApplicationMessageListMapByCondition";
        if(returnType != 0){
            sql = "HsMemberHousingApplicationMessageDao.selectMemberHousingApplicationMessageListByCondition";
        }
        return executeSql(condition,sql);
    }
}
