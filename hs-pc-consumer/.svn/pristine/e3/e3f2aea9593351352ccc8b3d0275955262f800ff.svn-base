package www.ucforward.com.controller.personalCenter;

import com.google.common.collect.Maps;
import org.apache.shiro.SecurityUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import www.ucforward.com.constants.ResultConstant;
import www.ucforward.com.controller.base.BaseController;
import www.ucforward.com.controller.user.UserController;
import www.ucforward.com.entity.ActiveUser;
import www.ucforward.com.manager.IMemberManager;
import www.ucforward.com.utils.JsonUtil;
import www.ucforward.com.vo.ResultVo;

import javax.annotation.Resource;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * 个人中心管理类
 * @author wenbn
 * @version 1.0
 * @date 2018/9/14
 */
@Controller
@ResponseBody
public class PersonalCenterController extends BaseController {


    // 日志记录器
    private static Logger logger = LoggerFactory.getLogger(PersonalCenterController.class);

    @Resource
    private IMemberManager memberManager;

    /**
     *获取会员信息
     * @return
     * @throws Exception
     */
    @PostMapping(value="center/user/info")
    public String getUserInfo() throws Exception {
        ActiveUser user = (ActiveUser) SecurityUtils.getSubject().getPrincipal();
        ResultVo vo = memberManager.getUserDetail(user.getUserid());
        return JsonUtil.toJson(vo);
    }

    /**
     * 获取我的关单记录
     * @return
     * @throws Exception
     */
    @PostMapping(value="center/order/closes")
    public String getUserCloseOrderRecordList() throws Exception {
        ActiveUser user = (ActiveUser) SecurityUtils.getSubject().getPrincipal();
        ResultVo vo = memberManager.getUserCloseOrderRecordList(user.getUserid());
        return JsonUtil.toJson(vo);
    }

    /**
     * 获取我的考勤
     * @return
     * @throws Exception
     */
    @PostMapping(value="center/query/attendance")
    public String queryAttendanceList() throws Exception {
        ResultVo result = new ResultVo();
        Map<Object,Object> condition = new HashMap<>();
        try {
            ActiveUser user = (ActiveUser) SecurityUtils.getSubject().getPrincipal();
            condition.put("userId",user.getUserid()); //业务员ID
            condition.put("queryMonthsAgo",1);//查询前几个月的数据,
//            condition.put("queryCurrentMonth",1);//非空即为查当月的数据
            result = memberManager.queryUserAttendances(condition);
        } catch (Exception e) {
            result.setResult(ResultConstant.SYS_REQUIRED_FAILURE);
            result.setMessage(ResultConstant.SYS_REQUIRED_FAILURE_VALUE);
        }

        return JsonUtil.toJson(result);
    }


}
