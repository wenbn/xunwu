package www.ucforward.com.manager.impl;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Service;
import www.ucforward.com.constants.ResultConstant;
import www.ucforward.com.entity.HsBooth;
import www.ucforward.com.entity.HsChannel;
import www.ucforward.com.manager.ICommonManager;
import www.ucforward.com.serviceInter.CommonService;
import www.ucforward.com.vo.ResultVo;

import javax.annotation.Resource;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

/**
 * @author wenbn
 * @version 1.0
 * @date 2018/8/20
 */
@Service
public class ICommonManagerImpl implements ICommonManager {

    @Resource
    private CommonService commonService;

    // 日志记录器
    private static Logger logger = LoggerFactory.getLogger(ICommonManagerImpl.class);

    /**
     * 获取频道列表
     * @param condition
     * @return
     */
    @Override
    public ResultVo getChannelList(Map<Object, Object> condition) {
        ResultVo vo = null;
        //自定义查询列名
        List<String> queryColumn = new ArrayList<>();
        queryColumn.add("ID channelId");//主键ID
        queryColumn.add("LANGUAGE_VERSION languageVersion");//语言版本（0：中文，1：英文）默认为0
        queryColumn.add("CHANNEL_NAME channelName");//频道名称
        queryColumn.add("CHANNEL_ALIAS_NAME channelAliasName");//频道别名唯一
        queryColumn.add("CHANNEL_DESC channelDesc");//频道描述
        queryColumn.add("CHANNEL_TYPE channelType");//频道类型（1：PC网站，2：触屏端，3：App）
        queryColumn.add("CHANNEL_STATE channelState");//频道的状态（0：不启用，1：启用）
        queryColumn.add("CHANNEL_SORT channelSort");//排序
        queryColumn.add("IS_DEL isDel");//是否删除0:不删除，1：删除
        queryColumn.add("CREATE_TIME createTime");//创建时间
        condition.put("queryColumn",queryColumn);
        try {
            vo = commonService.selectCustomColumnNamesList(HsChannel.class,condition);
        } catch (Exception e) {
            logger.warn("Remote call to CommonService fails"+e);
            vo = ResultVo.error(ResultConstant.SYS_REQUIRED_TIMEOUT_ERROR,ResultConstant.SYS_REQUIRED_TIMEOUT_ERROR_VALUE);
        }
        return vo;
    }

    /**
     * 获取展位列表
     * @param condition
     * @return
     */
    @Override
    public ResultVo getBoothList(Map<Object, Object> condition) {
        ResultVo vo = null;
        //自定义查询列名
        List<String> queryColumn = new ArrayList<>();
        queryColumn.add("ID channelId");//主键ID
        queryColumn.add("LANGUAGE_VERSION languageVersion");//语言版本（0：中文，1：英文）默认为0
        queryColumn.add("BOOTH_NAME boothName");//展位的名称
        queryColumn.add("BOOTH_ALIAS_NAME boothAliasName");//展位别名
        queryColumn.add("BOOTH_DESC channelDesc");//展位描述
        queryColumn.add("BOOTH_TYPE boothType");//展位类型（1：广告，2：买家出租问题 ，3：买家出售问题，4：卖家出租问题 ，5：卖家出售问题，6：友情链接，7：出租，8：出售，9：新楼盘）
        queryColumn.add("BOOTH_STATE boothState");//展位状态（0：启用，1：禁用）
        queryColumn.add("BOOTH_SORT boothSort");//排序
        queryColumn.add("IS_DEL isDel");//是否删除0:不删除，1：删除
        queryColumn.add("DATA_SIZE dataSize");//该栏位限制的数据条数0标识不限制
        queryColumn.add("BOOTH_EXCLUSIVE boothExclusive");//该展位的专属(1:PC, 2:TC, 3:APP)
        queryColumn.add("CREATE_TIME createTime");//创建时间
        condition.put("queryColumn",queryColumn);
        try {
            vo = commonService.selectCustomColumnNamesList(HsBooth.class,condition);
        } catch (Exception e) {
            logger.warn("Remote call to CommonService fails"+e);
            vo = ResultVo.error(ResultConstant.SYS_REQUIRED_TIMEOUT_ERROR,ResultConstant.SYS_REQUIRED_TIMEOUT_ERROR_VALUE);
        }
        return vo;
    }

    /**
     * 获取展位详情
     * @param id
     * @return
     */
    @Override
    public ResultVo getBoothDetail(Integer id) {
        ResultVo vo = null;
        try {
            vo = commonService.select(id,new HsBooth());
        } catch (Exception e) {
            logger.warn("Remote call to CommonService fails"+e);
            vo = ResultVo.error(ResultConstant.SYS_REQUIRED_TIMEOUT_ERROR,ResultConstant.SYS_REQUIRED_TIMEOUT_ERROR_VALUE);
        }
        return vo;
    }
}
